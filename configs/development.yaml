# Development configuration for LG-SOTF

# Database configuration
database:
  host: localhost
  port: 5432
  database: lg_sotf_dev
  username: lg_sotf
  password: lg_sotf_dev_password
  pool_size: 5
  max_overflow: 10

# Redis configuration
redis:
  host: localhost
  port: 6379
  password: null
  db: 0
  max_connections: 5

agents:
  ingestion:
    batch_size: 100
    polling_interval: 30
    max_concurrent_alerts: 50
    enable_deduplication: true
    deduplication_window_hours: 24
    alert_retention_days: 90
    rate_limit_enabled: true
    max_alerts_per_minute: 1000
    max_alerts_per_source_minute: 100
    
    source_priorities:
      file: 1
      webhook: 2
      crowdstrike: 3
      splunk: 4
    
    sources:
      # ========================================
      # FILE SOURCE
      # ========================================
      file:
        enabled: true
        watch_directory: "tests/fixtures/alerts"
        file_patterns:
          - "*.json"
          - "*.csv"
        delete_after_read: false
        move_to_processed: true
        processed_directory: "tests/fixtures/alerts/processed"
        
        csv_delimiter: ","
        csv_has_header: true
        csv_field_mapping:
          # Firewall CSV: event_id,timestamp,severity,event_type,source_ip,destination_ip...
          event_id: id
          timestamp: timestamp
          severity: severity
          event_type: category
          rule_name: title
          source_ip: source_ip
          destination_ip: destination_ip
          destination_port: destination_port
          protocol: protocol
          user: user
          device_name: host
          country: country
          bytes_transferred: bytes_transferred
          action: action
      
      # ========================================
      # WEBHOOK SOURCE (sibling, not child!)
      # ========================================
      webhook:
        enabled: false
        port: 8080
        path: "/webhook/alerts"
        auth_token: "poc_webhook_token"
      
      # ========================================
      # SPLUNK SOURCE
      # ========================================
      splunk:
        enabled: false
        base_url: "https://splunk-poc.example.com:8089"
        token: "poc_token"
        index: "security"
      
      # ========================================
      # CROWDSTRIKE SOURCE
      # ========================================
      crowdstrike:
        enabled: false
        base_url: "https://api.crowdstrike.com"
        client_id: "poc_client_id"
        client_secret: "poc_client_secret"
        

  triage:
    confidence_threshold: 70
    enable_ml_scoring: true
    ml_model_path: "models/triage_model.pkl"
  
  correlation:
    correlation_window_minutes: 60
    similarity_threshold: 0.7
    max_correlations: 10
    enable_llm_correlation: true
    llm_weight: 0.3

  analysis:
    max_iterations: 5
    min_confidence_threshold: 60
    max_confidence_threshold: 90
    enable_tool_orchestration: true
    enable_llm_reasoning: true
    react_temperature: 0.3
    max_reasoning_tokens: 1000
    parallel_tool_execution: true
    max_parallel_tools: 3
    tool_timeout: 30

  human_loop:
    escalation_threshold: 40
    max_escalation_level: 3
    response_timeout_hours: 24

# Tool configuration
tools:
  siem:
    splunk:
      base_url: "https://splunk-dev.example.com:8089"
      token: "dev_token"
      index: "security"
      search_timeout: 30

    qradar:
      base_url: "https://qradar-dev.example.com"
      token: "dev_token"
      timeout: 30

    wazuh:
      enabled: true
      base_url: "https://localhost:55000"
      username: "wazuh"
      password: "wazuh"

  intel:
    virustotal:
      api_key: "dev_virustotal_key"
      timeout: 10
      rate_limit: 4  # requests per minute

    recorded_future:
      api_key: "dev_recorded_future_key"
      timeout: 15

  sandbox:
    joe_sandbox:
      base_url: "https://joesandbox-dev.example.com"
      api_key: "dev_joe_sandbox_key"
      timeout: 300  # 5 minutes

  edr:
    crowdstrike:
      base_url: "https://api.crowdstrike.com"
      client_id: "dev_client_id"
      client_secret: "dev_client_secret"
      timeout: 30

# Storage configuration
storage:
  backend: "postgresql"
  connection_string: "postgresql://lg_sotf:lg_sotf_dev_password@localhost:5432/lg_sotf_dev"

  redis:
    connection_string: "redis://localhost:6379/0"
    default_ttl: 3600  # 1 hour

# Logging configuration
logging:
  level: "DEBUG"
  format: "json"
  file_path: "logs/lg_sotf_dev.log"
  max_file_size: "10MB"
  backup_count: 5

# Security configuration
security:
  encryption_key: "dev_encryption_key_32_bytes_long___"
  jwt_secret: "dev_jwt_secret_32_bytes_long______"
  session_timeout: 3600
  max_login_attempts: 5

# Monitoring configuration
monitoring:
  metrics_enabled: true
  metrics_port: 8090
  tracing_enabled: true
  tracing_sampling_rate: 0.1

# POC settings
poc:
  mode: "file"  # file | direct | webhook
  auto_process: true
  alerts_directory: "tests/fixtures/alerts"

# Development settings
development:
  debug_mode: true
  auto_reload: true
  mock_external_services: true
  test_data_path: "tests/fixtures"

# LLM configuration
llm:
  provider: "gemini"
  api_key: ""
  # model: "gemini-2.5-pro"
  model: "gemini-2.5-flash"
  temperature: 0.3
  max_tokens: 1000
  timeout: 30
